name: Build and Publish Docker Images

on:
  push:
    branches:
      - dev
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GHCR_IMAGE: ghcr.io/${{ github.repository_owner }}/

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set image tag
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/dev ]]; then
            echo "TAG=dev-latest" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "TAG=latest" >> $GITHUB_ENV
          fi

      - name: Set up QEMU for multi-arch
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ------------------------------
      # Build frontend
      - name: Build and push frontend
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            -t frontend:${{ env.TAG }} \
            ./frontend \
            --push

      # ------------------------------
      # Build metron_proxy
      - name: Build and push metron_proxy
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/arm/v7 \
            -t metron-proxy:${{ env.TAG }} \
            ./metron_proxy \
            --push

      # ------------------------------
      # Build pocketbase (pass correct ARCH arg)
      - name: Build and push pocketbase
        run: |
          for arch in amd64 arm64 armv7; do
            docker buildx build \
              --platform linux/$arch \
              -t pocketbase:${{ env.TAG }}-$arch \
              ./pocketbase \
              --build-arg ARCH=$arch \
              --push
          done
